{"version":3,"file":"node_modules_react-native_Libraries_Utilities_codegenNativeCommands_js.chunk.bundle","mappings":"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","sources":["webpack:///./node_modules/react-native/Libraries/ReactNative/RendererImplementation.js","webpack:///./node_modules/react-native/Libraries/ReactNative/RendererProxy.js","webpack:///./node_modules/react-native/Libraries/Utilities/codegenNativeCommands.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport type {HostComponent} from '../Renderer/shims/ReactNativeTypes';\nimport type {Element, ElementRef, ElementType} from 'react';\n\nimport {type RootTag} from './RootTag';\n\nexport function renderElement({\n  element,\n  rootTag,\n  useFabric,\n  useConcurrentRoot,\n}: {\n  element: Element<ElementType>,\n  rootTag: number,\n  useFabric: boolean,\n  useConcurrentRoot: boolean,\n}): void {\n  if (useFabric) {\n    require('../Renderer/shims/ReactFabric').render(\n      element,\n      rootTag,\n      null,\n      useConcurrentRoot,\n    );\n  } else {\n    require('../Renderer/shims/ReactNative').render(element, rootTag);\n  }\n}\n\nexport function findHostInstance_DEPRECATED<TElementType: ElementType>(\n  componentOrHandle: ?(ElementRef<TElementType> | number),\n): ?ElementRef<HostComponent<mixed>> {\n  return require('../Renderer/shims/ReactNative').findHostInstance_DEPRECATED(\n    componentOrHandle,\n  );\n}\n\nexport function findNodeHandle<TElementType: ElementType>(\n  componentOrHandle: ?(ElementRef<TElementType> | number),\n): ?number {\n  return require('../Renderer/shims/ReactNative').findNodeHandle(\n    componentOrHandle,\n  );\n}\n\nexport function dispatchCommand(\n  handle: ElementRef<HostComponent<mixed>>,\n  command: string,\n  args: Array<mixed>,\n): void {\n  if (global.RN$Bridgeless === true) {\n    // Note: this function has the same implementation in the legacy and new renderer.\n    // However, evaluating the old renderer comes with some side effects.\n    return require('../Renderer/shims/ReactFabric').dispatchCommand(\n      handle,\n      command,\n      args,\n    );\n  } else {\n    return require('../Renderer/shims/ReactNative').dispatchCommand(\n      handle,\n      command,\n      args,\n    );\n  }\n}\n\nexport function sendAccessibilityEvent(\n  handle: ElementRef<HostComponent<mixed>>,\n  eventType: string,\n): void {\n  return require('../Renderer/shims/ReactNative').sendAccessibilityEvent(\n    handle,\n    eventType,\n  );\n}\n\n/**\n * This method is used by AppRegistry to unmount a root when using the old\n * React Native renderer (Paper).\n */\nexport function unmountComponentAtNodeAndRemoveContainer(rootTag: RootTag) {\n  // $FlowExpectedError[incompatible-type] rootTag is an opaque type so we can't really cast it as is.\n  const rootTagAsNumber: number = rootTag;\n  require('../Renderer/shims/ReactNative').unmountComponentAtNodeAndRemoveContainer(\n    rootTagAsNumber,\n  );\n}\n\nexport function unstable_batchedUpdates<T>(\n  fn: T => void,\n  bookkeeping: T,\n): void {\n  // This doesn't actually do anything when batching updates for a Fabric root.\n  return require('../Renderer/shims/ReactNative').unstable_batchedUpdates(\n    fn,\n    bookkeeping,\n  );\n}\n\nexport function isProfilingRenderer(): boolean {\n  return Boolean(__DEV__);\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n/**\n * This module exists to allow apps to select their renderer implementation\n * (e.g.: Fabric-only, Paper-only) without having to pull all the renderer\n * implementations into their app bundle, which affects app size.\n *\n * By default, the setup will be:\n *   -> RendererProxy\n *     -> RendererImplementation (which uses Fabric or Paper depending on a flag at runtime)\n *\n * But this will allow a setup like this without duplicating logic:\n *   -> RendererProxy (fork)\n *     -> RendererImplementation (which uses Fabric or Paper depending on a flag at runtime)\n *     or -> OtherImplementation (which uses Fabric only)\n */\n\nexport * from './RendererImplementation';\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\nconst {dispatchCommand} = require('../ReactNative/RendererProxy');\n\ntype Options<T = string> = $ReadOnly<{|\n  supportedCommands: $ReadOnlyArray<T>,\n|}>;\n\nfunction codegenNativeCommands<T: interface {}>(options: Options<$Keys<T>>): T {\n  const commandObj: {[$Keys<T>]: (...$ReadOnlyArray<mixed>) => void} = {};\n\n  options.supportedCommands.forEach(command => {\n    // $FlowFixMe[missing-local-annot]\n    commandObj[command] = (ref, ...args) => {\n      // $FlowFixMe[incompatible-call]\n      dispatchCommand(ref, command, args);\n    };\n  });\n\n  return ((commandObj: any): T);\n}\n\nexport default codegenNativeCommands;\n"],"names":["renderElement","_ref","element","rootTag","useFabric","useConcurrentRoot","require","render","findHostInstance_DEPRECATED","componentOrHandle","findNodeHandle","dispatchCommand","handle","command","args","global","RN$Bridgeless","sendAccessibilityEvent","eventType","unmountComponentAtNodeAndRemoveContainer","rootTagAsNumber","unstable_batchedUpdates","fn","bookkeeping","isProfilingRenderer","Boolean","__DEV__","_RendererImplementation","Object","keys","forEach","key","exports","defineProperty","enumerable","get","_require","codegenNativeCommands","options","commandObj","supportedCommands","ref","_len","arguments","length","Array","_key","_default","default"],"sourceRoot":""}